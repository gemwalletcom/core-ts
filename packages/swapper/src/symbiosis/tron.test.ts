import { SymbiosisTransactionData } from "../symbiosis/client";
import { TronTxBuilder, TronChainId } from "./tron";

describe('TronTxBuilder', () => {
    it('builds Tron quote data', () => {
        const builder = new TronTxBuilder(210);
        const txData: SymbiosisTransactionData = {
            chainId: TronChainId,
            functionSelector: "onswap(address,uint256,address,address,bytes)",
            feeLimit: 150000000,
            value: "2890000",
            to: "THMt71Mxx9ffvmMkLRkTsTcxF9sj3PW418",
            data: "000000000000000000000000a614f803b6fd780986a42c78ec9c7f77e6ded13c0000000000000000000000000000000000000000000000000000000005f5e1000000000000000000000000006e0617948fe030a7e4970f8389d4ad295f249b7e0000000000000000000000006e0617948fe030a7e4970f8389d4ad295f249b7e00000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000010418cbafe50000000000000000000000000000000000000000000000000000000005f5e10000000000000000000000000000000000000000000000000000000000182a5af900000000000000000000000000000000000000000000000000000000000000a000000000000000000000000066426c7ac3d98b29191063833345b6bc540d727800000000000000000000000000000000000000000000000000000000d01ccee10000000000000000000000000000000000000000000000000000000000000002000000000000000000000000a614f803b6fd780986a42c78ec9c7f77e6ded13c000000000000000000000000891cdb91d149f23b1a45d9c5ca78a88d0cb44c1800000000000000000000000000000000000000000000000000000000",
        };
        const quoteData = builder.buildTronQuoteData(txData);

        expect(quoteData.to).toEqual(txData.to);
        expect(quoteData.value).toEqual(txData.value);
        expect(quoteData.data).toEqual("0x21c69a19000000000000000000000000a614f803b6fd780986a42c78ec9c7f77e6ded13c0000000000000000000000000000000000000000000000000000000005f5e1000000000000000000000000006e0617948fe030a7e4970f8389d4ad295f249b7e0000000000000000000000006e0617948fe030a7e4970f8389d4ad295f249b7e00000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000010418cbafe50000000000000000000000000000000000000000000000000000000005f5e10000000000000000000000000000000000000000000000000000000000182a5af900000000000000000000000000000000000000000000000000000000000000a000000000000000000000000066426c7ac3d98b29191063833345b6bc540d727800000000000000000000000000000000000000000000000000000000d01ccee10000000000000000000000000000000000000000000000000000000000000002000000000000000000000000a614f803b6fd780986a42c78ec9c7f77e6ded13c000000000000000000000000891cdb91d149f23b1a45d9c5ca78a88d0cb44c1800000000000000000000000000000000000000000000000000000000");
        expect(quoteData.gasLimit).toEqual("714286");
    });
});